{"available":true,
 "checkpointable":false,
 "defaultMemoryPerNode":24,
 "defaultProcessorsPerNode":12,
 "defaultMaxRunTime":"23:59:00",
 "defaultNodeCount":1,
 "defaultQueue":"normal",
 "deploymentPath":"jcarson/applications/savp-0.3.1/lonestar4",
 "deploymentSystem":"data.iplantcollaborative.org",
 "executionSystem":"lonestar4-04242014-1023-jcarson",
 "executionType":"HPC",
 "helpURI":"http://www.broadinstitute.org/gatk",
 "label": "Single Animal Variant Pipeline",
 "longDescription":"GATK realign and recal, then up to 3 variant callers",
 "modules":["load jdk64/1.7.0","load python/2.7.1","load picard/1.107","load gatk/3.1.1"],
 "name":"jcarson-savp",
 "ontology":["http://sswapmeet.sswap.info/agave/apps/Application"],
 "parallelism":"SERIAL",
 "shortDescription":"Detect variants in bam",
 "storageSystem":"data.iplantcollaborative.org",
 "tags":["variants","NGS"],
 "templatePath":"savp.template",
 "testPath":"test-savp.sh",
 "version":"0.3.1",
 "inputs":[
    {"id":"inputBam",
     "value":
        {"default":"foo.bam",
         "order":1,
         "required":true,
         "validator":".bam$",
         "visible":true},
     "semantics":
        {"ontology":["http://sswapmeet.sswap.info/mime/application/X-bam"],
         "minCardinality":1,
         "fileTypes":["raw-0"]},
     "details":
        {"description":"",
         "label":"The BAM file to variant call",
         "argument":null,
         "showArgument":false}},
    {"id":"inputBamBai",
     "value":
        {"default":"foo.bam.bai",
         "order":2,
         "required":true,
         "validator":".bam.bai$",
         "visible":true},
     "semantics":
        {"ontology":["http://sswapmeet.sswap.info/mime/application/X-bai"],
         "minCardinality":1,
         "fileTypes":["raw-0"]},
     "details":
        {"description":"",
         "label":"The index of the same BAM file.  Base names must match.",
         "argument":null,
         "showArgument":false}},
     {"id":"referenceBundle",
     "value":
        {"default":"ref.tar",
         "order":3,
         "required":true,
         "validator":".tar$",
         "visible":true},
     "semantics":
        {"ontology":["http://sswapmeet.sswap.info/mime/application/X-tar"],
         "minCardinality":1,
         "fileTypes":["raw-0"]},
     "details":
        {"description":"",
         "label":"Reference .tar w/ (.fa .dict .fa.{.amb .ann .bwt .fai .pac .sa})",
         "argument":null,
         "showArgument":false}},
    {"id":"knownVariants",
     "value":
        {"default":"",
         "order":4,
         "required":false,
         "visible":true},
     "semantics":
        {"ontology":["http://sswapmeet.sswap.info/mime/application/X-vcf"],
         "fileTypes":["raw-0"]},
     "details":
        {"description":"",
         "label":"Known variants - optional; skips BaseRecalibrator if blank",
         "argument":null,
         "showArgument":false}}],
 "parameters":[
    {"id":"regionName",
     "value":
        {"default":"",
         "order":1,
         "required":false,
         "type":"string",
         "validator":"",
         "visible":true},
     "semantics":
        {"ontology":["xs:string"]},
     "details":
        {"description":null,
         "label":"Region name - optional; processes complete .bam if blank",
         "argument":null,
         "showArgument":false}},
	{"id":"runUnifiedGenotyper",
     "value":
        {"default":true,
         "order":2,
         "required":true,
         "type":"bool",
         "visible":true},
     "semantics":
        {"ontology":["xs:boolean"]},
     "details":
        {"description":null,
         "label":"GATK UnifiedGenotyper variant caller",
         "argument":null,
         "showArgument":false}},
	{"id":"runPlatypus",
     "value":
        {"default":true,
         "order":3,
         "required":true,
         "type":"bool",
         "visible":true},
     "semantics":
        {"ontology":["xs:boolean"]},
     "details":
        {"description":null,
         "label":"Platypus CallVariants",
         "argument":null,
         "showArgument":false}},
	{"id":"runMpileup",
     "value":
        {"default":false,
         "order":4,
         "required":true,
         "type":"bool",
         "visible":true},
     "semantics":
        {"ontology":["xs:boolean"]},
     "details":
        {"description":null,
         "label":"Samtools mpileup/vcfutils variant caller; WARNING: INEFFICIENT",
         "argument":null,
         "showArgument":false}},
   {"id":"cleanupInputs",
     "value":
        {"default":true,
         "order":99,
         "required":true,
         "type":"bool",
         "visible":true},
     "semantics":
        {"ontology":["xs:boolean"]},
     "details":
        {"description":null,
         "label":"Do not copy input files to output directory",
         "argument":null,
         "showArgument":false}},
   {"id":"cleanupIntermediates",
     "value":
        {"default":true,
         "order":100,
         "required":true,
         "type":"bool",
         "visible":true},
     "semantics":
        {"ontology":["xs:boolean"]},
     "details":
        {"description":null,
         "label":"Do not copy intermediate temporary files to output directory",
         "argument":null,
         "showArgument":false}}],
 "outputs":[]
 }

